import { RecipeTreeWithCraftFlags } from '../src/types'
import { usedItems } from '../src'

describe('usedItems', () => {
  it('gets the correct items to buy and used available items', () => {
    const tree: RecipeTreeWithCraftFlags = {
      craft: true,
      craftDecisionPrice: 36,
      craftPrice: 36,
      id: 1,
      output: 1,
      quantity: 1,
      totalQuantity: 2,
      usedQuantity: 2,
      decisionPrice: 36,
      craftResultPrice: 36,
      buyPrice: 20,
      buyPriceEach: 10,
      prerequisites: [
        {
          type: 'Recipe',
          id: 123,
        },
      ],
      min_rating: null,
      disciplines: [],
      type: 'Recipe',
      multipleRecipeCount: 1,
      daily_purchase_cap: 0,
      weekly_purchase_cap: 0,
      components: [
        {
          craft: false,
          craftDecisionPrice: 60,
          craftPrice: 60,
          decisionPrice: 6,
          craftResultPrice: 6,
          id: 7,
          output: 1,
          quantity: 3,
          totalQuantity: 6,
          usedQuantity: 6,
          buyPrice: 6,
          buyPriceEach: 1,
          prerequisites: [
            {
              type: 'Recipe',
              id: 123,
            },
          ],
          min_rating: null,
          disciplines: [],
          type: 'Recipe',
          multipleRecipeCount: 1,
          daily_purchase_cap: 0,
          weekly_purchase_cap: 0,
          components: [
            {
              craft: false,
              craftDecisionPrice: 60,
              buyPrice: 60,
              buyPriceEach: 10,
              decisionPrice: 60,
              craftResultPrice: 60,
              id: 4,
              output: 1,
              quantity: 1,
              totalQuantity: 6,
              usedQuantity: 6,
              min_rating: null,
              disciplines: [],
              type: 'Item',
              prerequisites: [],
              multipleRecipeCount: 1,
              daily_purchase_cap: 0,
              weekly_purchase_cap: 0,
            },
          ],
        },
        {
          craft: true,
          craftDecisionPrice: 31,
          decisionPrice: 30,
          craftResultPrice: 30,
          buyPrice: 300,
          buyPriceEach: 100,
          craftPrice: 30,
          id: 3,
          output: 1,
          quantity: 5,
          totalQuantity: 10,
          usedQuantity: 3,
          prerequisites: [
            {
              type: 'Recipe',
              id: 123,
            },
          ],
          min_rating: null,
          disciplines: [],
          type: 'Recipe',
          multipleRecipeCount: 1,
          daily_purchase_cap: 0,
          weekly_purchase_cap: 0,
          components: [
            {
              craft: false,
              craftDecisionPrice: 30,
              decisionPrice: 30,
              craftResultPrice: 30,
              buyPrice: 30,
              buyPriceEach: 10,
              id: 4,
              output: 1,
              quantity: 2,
              totalQuantity: 6,
              usedQuantity: 3,
              min_rating: null,
              disciplines: [],
              type: 'Item',
              prerequisites: [],
              multipleRecipeCount: 1,
              daily_purchase_cap: 0,
              weekly_purchase_cap: 0,
            },
            {
              craft: false,
              craftDecisionPrice: false,
              decisionPrice: false,
              craftResultPrice: false,
              buyPrice: false,
              buyPriceEach: false,
              id: 4,
              output: 1,
              quantity: 6,
              totalQuantity: 6,
              usedQuantity: 6,
              min_rating: null,
              disciplines: [],
              type: 'Currency',
              prerequisites: [],
              multipleRecipeCount: 1,
              daily_purchase_cap: 0,
              weekly_purchase_cap: 0,
            },
            {
              craft: false,
              craftDecisionPrice: 1,
              decisionPrice: 1,
              craftResultPrice: 1,
              buyPrice: 1,
              buyPriceEach: 1,
              id: 1,
              output: 1,
              quantity: 1000,
              totalQuantity: 1000,
              usedQuantity: 1000,
              min_rating: null,
              disciplines: [],
              type: 'Currency',
              prerequisites: [],
              multipleRecipeCount: 1,
              daily_purchase_cap: 0,
              weekly_purchase_cap: 0,
            },
          ],
        },
        {
          craft: false,
          craftDecisionPrice: 0,
          craftPrice: 0,
          decisionPrice: 0,
          craftResultPrice: 0,
          id: 5,
          output: 1,
          quantity: 2,
          totalQuantity: 4,
          usedQuantity: 0,
          buyPrice: 0,
          buyPriceEach: 25,
          prerequisites: [
            {
              type: 'Recipe',
              id: 123,
            },
          ],
          min_rating: null,
          disciplines: [],
          type: 'Recipe',
          multipleRecipeCount: 1,
          daily_purchase_cap: 0,
          weekly_purchase_cap: 0,
          components: [
            {
              craft: false,
              craftDecisionPrice: 0,
              buyPrice: 0,
              buyPriceEach: 1,
              decisionPrice: 0,
              craftResultPrice: 0,
              id: 6,
              output: 1,
              quantity: 100,
              totalQuantity: 0,
              usedQuantity: 0,
              min_rating: null,
              disciplines: [],
              type: 'Item',
              prerequisites: [],
              multipleRecipeCount: 1,
              daily_purchase_cap: 0,
              weekly_purchase_cap: 0,
            },
          ],
        },
      ],
    }

    const usedItemObject = usedItems(tree)
    expect(usedItemObject).toEqual({
      buy: { 4: 3, 7: 6 },
      available: { 3: 7, 4: 3, 5: 4 },
      currency: { 1: 1000, 4: 6 },
    })
  })
})
